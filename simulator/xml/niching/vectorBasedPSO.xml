<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="sequentialVBPSO" class="niching.NichingAlgorithm">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="25000">
                <predicate class="stoppingcondition.Maximum"/>
                <measurement class="measurement.single.ParticlePositionUpdates"/>
            </addStoppingCondition>

            <mainSwarm class="pso.PSO">
                <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                    <entityNumber value="50"/>
                    <entityType class="pso.particle.StandardParticle">
                        <personalBestInitialisationStrategy class="entity.initialisation.MutatedPBestInitialisationStrategy"/>
                    </entityType>
                </initialisationStrategy>
            </mainSwarm>

            <nicheCreator class="niching.creation.VectorBasedNicheCreationStrategy">
                <swarmBehavior class="pso.particle.ParticleBehavior">
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <inertiaWeight class="controlparameter.ConstantControlParameter" parameter="0.8"/>
                        <socialAcceleration class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                        <cognitiveAcceleration class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                    </velocityProvider>
                </swarmBehavior>
                <swarmType class="pso.PSO">
                    <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="500"/>
                </swarmType>
            </nicheCreator>

            <nicheDetector class="niching.creation.NPerIterationNicheDetection">
                <n value="1"/>
            </nicheDetector>

            <subSwarmIterator class="niching.iterators.FirstSwarmIterator">
                <iterator class="niching.iterators.CompleteNicheIteration"/>
            </subSwarmIterator>

            <iterationStrategy class="niching.iterationstrategies.VectorBasedPSO"/>
        </algorithm>

        <algorithm id="parallelVBPSO" class="niching.NichingAlgorithm">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="25000">
                <predicate class="stoppingcondition.Maximum"/>
                <measurement class="measurement.single.ParticlePositionUpdates"/>
            </addStoppingCondition>

            <nicheCreator class="niching.creation.VectorBasedNicheCreationStrategy">
                <swarmBehavior class="pso.particle.ParticleBehavior">
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <inertiaWeight class="controlparameter.ConstantControlParameter" parameter="0.8"/>
                        <socialAcceleration class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                        <cognitiveAcceleration class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                    </velocityProvider>
                </swarmBehavior>

                <swarmType class="pso.PSO">
                    <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition"/>
                </swarmType>
            </nicheCreator>

            <nicheDetector class="niching.creation.AlwaysTrueNicheDetection"/>

            <subSwarmIterator class="niching.iterators.MergingSubswarmIterator">
                <iterator class="niching.iterators.SingleNicheIteration"/>
                <granularity class="controlparameter.ConstantControlParameter" parameter="0.01"/>
                <iterations class="controlparameter.ConstantControlParameter" parameter="1"/>
            </subSwarmIterator>

            <iterationStrategy class="niching.iterationstrategies.VectorBasedPSO"/>
        </algorithm>

        <algorithm id="enhancedVBPSO" class="niching.NichingAlgorithm">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="25000">
                <predicate class="stoppingcondition.Maximum"/>
                <measurement class="measurement.single.ParticlePositionUpdates"/>
            </addStoppingCondition>

            <nicheCreator class="niching.creation.VectorBasedNicheCreationStrategy">
                <swarmBehavior class="pso.particle.ParticleBehavior">
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <inertiaWeight class="controlparameter.ConstantControlParameter" parameter="0.8"/>
                        <socialAcceleration class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                        <cognitiveAcceleration class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                    </velocityProvider>
                    <positionProvider class="pso.positionprovider.VectorBasedPositionProvider">
                        <granularity class="controlparameter.ConstantControlParameter" parameter="0.01"/>
                    </positionProvider>
                </swarmBehavior>

                <swarmType class="pso.PSO">
                    <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition"/>
                </swarmType>
            </nicheCreator>

            <nicheDetector class="niching.creation.AlwaysTrueNicheDetection"/>

            <subSwarmIterator class="niching.iterators.MergingSubswarmIterator">
                <iterator class="niching.iterators.SingleNicheIteration"/>
                <granularity class="controlparameter.ConstantControlParameter" parameter="0.01"/>
                <iterations class="controlparameter.ConstantControlParameter" parameter="10"/>
            </subSwarmIterator>

            <iterationStrategy class="niching.iterationstrategies.VectorBasedPSO"/>
        </algorithm>
    </algorithms>

    <problems>
        <problem id="f1" class="problem.FunctionOptimisationProblem" domain="R(0:1)^5">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.EqualMinima"/>
        </problem>
        
        <problem id="f2" class="problem.FunctionOptimisationProblem" domain="R(1:2.5)">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.EvenDecreasingMinima"/>
        </problem>
        
        <problem id="f3" class="problem.FunctionOptimisationProblem" domain="R(0:1)">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.UnevenEqualMinima"/>
        </problem>
        
        <problem id="f4" class="problem.FunctionOptimisationProblem" domain="R(1:5)">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.UnevenDecreasingMinima"/>
        </problem>
        
        <problem id="f5" class="problem.FunctionOptimisationProblem" domain="R(-6:6)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.InvertedHimmelblau"/>
        </problem>
        
        <problem id="f6" class="problem.FunctionOptimisationProblem" domain="R(-28:28)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Griewank"/>
        </problem>
        
        <problem id="f7" class="problem.FunctionOptimisationProblem" domain="R(-1.5:1.5)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Rastrigin"/>
        </problem>
        
        <problem id="f8" class="problem.FunctionOptimisationProblem" domain="R(-1.9:1.9)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.InvertedSixHumpCamelBack"/>
        </problem>
        
        <problem id="f9" class="problem.FunctionOptimisationProblem" domain="R(-10:10)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.InvertedShubert"/>
        </problem>
        
        <problem id="f10" class="problem.FunctionOptimisationProblem" domain="R(-0.25:10)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.InvertedVincent"/>
        </problem>
        
        <problem id="f11" class="problem.FunctionOptimisationProblem" domain="R(0:10)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Branin"/>
        </problem>
        
        <problem id="f12" class="problem.FunctionOptimisationProblem" domain="R(-500:500)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.InvertedSchwefel"/>
        </problem>
        
        <problem id="f13" class="problem.FunctionOptimisationProblem" domain="R(-30:30)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Ackley"/>
        </problem>
        
        <problem id="f14" class="problem.FunctionOptimisationProblem" domain="R(0:3.5)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Michalewicz"/>
        </problem>
        
        <problem id="f15" class="problem.FunctionOptimisationProblem" domain="R(-2:2)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.UrsemF1"/>
        </problem>
        
        <problem id="f16" class="problem.FunctionOptimisationProblem" domain="R(-2:2)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.InvertedUrsemF3"/>
        </problem>
        
        <problem id="f17" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^2">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Bukin6"/>
        </problem>
        
        <problem id="f18" class="problem.FunctionOptimisationProblem" domain="R(-512:512)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.EggHolder"/>
        </problem>
        
        <problem id="f19" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Rosenbrock"/>
        </problem>
        
        <problem id="f20" class="problem.FunctionOptimisationProblem" domain="R(-11:11)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.PenHolder"/>
        </problem>
        
        <problem id="f21" class="problem.FunctionOptimisationProblem" domain="R(-512:512)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Rana"/>
        </problem>
        
        <problem id="f22" class="problem.FunctionOptimisationProblem" domain="R(-11:11)^3">
            <objective class="problem.objective.Minimise"/>
            <function class="functions.continuous.unconstrained.Pathological"/>
        </problem>
    </problems>

    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="1">
        <addMeasurement class="measurement.single.ParticlePositionUpdates"/>
        <addMeasurement class="measurement.multiple.SumGradientAverageAndInvertedNichesNumber"/>
        <addMeasurement class="measurement.single.SwarmSize"/>
        <addMeasurement class="measurement.single.LocalNiches">
            <nicheRadius class="controlparameter.ConstantControlParameter" parameter="0.01"/>
        </addMeasurement>
        <addMeasurement class="measurement.multiple.CompositeMeasurement">
            <addMeasurement class="measurement.single.SwarmSize"/>
            <addMeasurement class="measurement.single.Solution"/>
            <addMeasurement class="measurement.single.Fitness"/>
            <addMeasurement class="measurement.single.GradientVector"/>
            <addMeasurement class="measurement.single.GradientVectorLength"/>
        </addMeasurement>
    </measurements>

    <simulations>
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f1"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f1.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f2"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f2.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f3"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f3.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f4"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f4.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f5"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f5.txt"/>
        </simulation>

        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f6"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f6.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f7"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f7.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f8"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f8.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f9"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f9.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f10"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f10.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f11"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f11.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f12"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f12.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f13"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f13.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f14"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f14.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f15"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f15.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f16"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f16.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f17"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f17.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f18"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f18.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f19"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f19.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f20"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f20.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f21"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f21.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="sequentialVBPSO"/>
            <problem idref="f22"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/sequentialVBPSO-f22.txt"/>
        </simulation>

        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f1"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f1.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f2"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f2.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f3"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f3.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f4"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f4.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f5"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f5.txt"/>
        </simulation>

        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f6"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f6.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f7"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f7.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f8"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f8.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f9"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f9.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f10"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f10.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f11"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f11.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f12"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f12.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f13"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f13.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f14"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f14.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f15"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f15.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f16"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f16.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f17"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f17.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f18"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f18.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f19"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f19.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f20"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f20.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f21"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f21.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="parallelVBPSO"/>
            <problem idref="f22"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/parallelVBPSO-f22.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f1"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f1.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f2"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f2.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f3"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f3.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f4"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f4.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f5"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f5.txt"/>
        </simulation>

        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f6"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f6.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f7"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f7.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f8"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f8.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f9"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f9.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f10"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f10.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f11"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f11.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f12"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f12.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f13"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f13.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f14"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f14.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f15"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f15.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f16"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f16.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f17"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f17.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f18"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f18.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f19"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f19.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f20"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f20.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f21"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f21.txt"/>
        </simulation>
        
        <simulation samples="1">
            <algorithm idref="enhancedVBPSO"/>
            <problem idref="f22"/>
            <measurements idref="fitness" />
            <output format="TXT" file="data/enhancedVBPSO-f22.txt"/>
        </simulation>
    </simulations>
</simulator>
